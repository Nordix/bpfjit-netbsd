name: CI

on:
  push:
  pull_request:
    branches:
      # Branches from forks have the form 'user:branch-name' so we only run
      # this job on pull_request events for branches that look like fork
      # branches. Without this we would end up running this job twice for non
      # forked PRs, once for the push and then once for opening the PR.
      - '**:**'
      - master
env:
  USE_SLJIT_COMMIT: 19309dc09600fa422c16c5453adc721f6a6e9c81

jobs:
  build:
    name: ${{ matrix.cmake-build-type }}-build [${{ matrix.compiler }}, cmake-${{ matrix.cmake-version }}]
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        compiler: [gcc-9, clang-10]
        cmake-version: [3.19]
        cmake-build-type: [Release, RelWithDebInfo]
        include:
          - compiler: gcc-4.8
            cmake-version: 3.12
            cmake-build-type: Release
          - compiler: gcc-5
            cmake-version: 3.13
            cmake-build-type: Release
          - compiler: gcc-6
            cmake-version: 3.14
            cmake-build-type: Release
          - compiler: gcc-7
            cmake-version: 3.15
            cmake-build-type: Release
          - compiler: gcc-8
            cmake-version: 3.16
            cmake-build-type: Release
          - compiler: clang-3.9
            cmake-version: 3.17
            cmake-build-type: Release
          - compiler: clang-7
            cmake-version: 3.18
            cmake-build-type: Release
          - compiler: clang-9
            cmake-version: 3.19
            cmake-build-type: Release

    steps:
    - name: Prepare
      run: sudo apt install ${{ matrix.compiler }} libpcap-dev

    - name: Setup CMake
      run: |
        wget https://cmake.org/files/v${{ matrix.cmake-version }}/cmake-${{ matrix.cmake-version }}.0-Linux-x86_64.sh -O /tmp/cmake.sh
        sudo sh /tmp/cmake.sh --prefix=/usr/local/ --exclude-subdir
        # Make sure we use correct version
        cmake --version | grep -c ${{ matrix.cmake-version }}.0

    - uses: actions/checkout@v2

    - name: Create install folder
      run: cmake -E make_directory $RUNNER_TEMP/install

    - name: Download, build and install dependency sljit
      run: |
        DESTDIR=$RUNNER_TEMP/install \
        USE_SLJIT_COMMIT=${{ env.USE_SLJIT_COMMIT }} \
        make install-sljit

    - name: Create build folder
      run: cmake -E make_directory build

    - name: Generate makefiles
      shell: bash
      env:
        CC: ${{ matrix.compiler }}
      working-directory: build
      run: cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_PREFIX_PATH=$RUNNER_TEMP/install ..

    - name: Build bpfjit
      shell: bash
      working-directory: build
      run: VERBOSE=1 make

    - name: Install bpfjit
      shell: bash
      working-directory: build
      run: DESTDIR=$RUNNER_TEMP/install make install

    - name: Build and run tests via CMake
      shell: bash
      working-directory: build
      run: |
        make bpfjit-test && ./bpfjit-test
        make bpfjit-test-with-pcap && ./bpfjit-test-with-pcap

    - name: Build and run tests via Makefile
      shell: bash
      env:
        CC: ${{ matrix.compiler }}
      run: |
        PREFIX=$RUNNER_TEMP/install/usr/local make test
        PREFIX=$RUNNER_TEMP/install/usr/local make test-with-pcap
